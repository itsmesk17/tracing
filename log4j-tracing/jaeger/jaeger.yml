version: "3.8"

services:
  els:
    image: elasticsearch:7.17.22
    restart: on-failure
    container_name: els
    hostname: els
    environment:
      - cluster.name=jaeger-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx2048m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
      - ./eslog:/usr/share/elasticsearch/logs
  kibana:
    image: kibana:7.17.22
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      SERVER_NAME: "kibana"
      ELASTICSEARCH_HOSTS: "http://els:9200"
    depends_on:
      - els
  jaeger-collector:
    image: jaegertracing/jaeger-collector:latest
    ports:
      - "14250:14250"
      - "14267:14267"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    depends_on:
      - els
    container_name: jaeger-collector
    hostname: jaeger-collector
    restart: unless-stopped
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
    command: ["--es.num-shards=1", "--es.num-replicas=0", "--es.server-urls=http://els:9200"]
  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./otel-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
    restart: unless-stopped
    container_name: otel-collector
    depends_on:
      - els
      - jaeger-collector
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
     - ZOOKEEPER_CLIENT_PORT=2181
     - ZOOKEEPER_TICK_TIME=2000
    restart: unless-stopped
  kafka:
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://152.70.149.143:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - zookeeper
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
    volumes:
      - ./prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
      - ./prometheus-data:/prometheus
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
  jaeger-query:
    image: jaegertracing/jaeger-query:latest
    ports:
      - 16686:16686
      - 16687:16687
    depends_on:
      - els
      - jaeger-collector
      - prometheus
    restart: unless-stopped
    container_name: jaeger-query
    environment:
      SPAN_STORAGE_TYPE: "elasticsearch"
      METRICS_STORAGE_TYPE: "prometheus"
    command: ["--span-storage.type=elasticsearch", "--es.server-urls=http://els:9200", "--prometheus.server-url=http://prometheus:9090"]
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: unless-stopped
    volumes:
      - ./mysql-data:/var/lib/mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=mySchema
  greeting-service:
    build: ../../GreetingService/
    container_name: greeting-service
    ports:
      - 8083:8083
    volumes:
      - ./agent:/agent
    environment:
      - applicationName=GreetingApp
      - groupName=otel-tracing
      - otel.collector.url=http://otel-collector:4317
      - OTEL_SERVICE_NAME=GreetingApp
      - OTEL_LOG_LEVEL=debug
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://otel-collector:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_TRACES_SAMPLER=always_on
      - "JAVA_TOOL_OPTIONS=-javaagent:/agent/opentelemetry-javaagent.jar"
    depends_on:
      - mysql
      - otel-collector
  order-history-service:
    build: ../../OrderHistoryService/
    container_name: order-history-service
    ports:
      - 8081:8081
    volumes:
      - ./agent:/agent
    environment:
      - applicationName=OrderHistoryApp
      - groupName=otel-tracing
      - otel.collector.url=http://otel-collector:4317
      - db.url=jdbc:mysql://mysql:3306/mySchema
      - db.user=root
      - db.password=secret
      - OTEL_SERVICE_NAME=OrderHistoryApp
      - OTEL_LOG_LEVEL=debug
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://otel-collector:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_TRACES_SAMPLER=always_on
#      - "JAVA_TOOL_OPTIONS=-javaagent:/agent/opentelemetry-javaagent.jar"
    depends_on:
      - mysql
      - otel-collector
  order-service:
    build: ../../OrderService/
    container_name: order-service
    ports:
      - 8080:8080
    volumes:
      - ./agent:/agent
    environment:
      - applicationName=OrderApp
      - groupName=otel-tracing
      - otel.collector.url=http://otel-collector:4317
      - db.url=jdbc:mysql://mysql:3306/mySchema
      - db.user=root
      - db.password=secret
      - kafka.broker.url=kafka:9092
      - orderHistory.service.url=http://order-history-service:8081/orderHistory
      - OTEL_SERVICE_NAME=OrderApp
      - OTEL_LOG_LEVEL=debug
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://otel-collector:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_TRACES_SAMPLER=always_on
#      - "JAVA_TOOL_OPTIONS=-javaagent:/agent/opentelemetry-javaagent.jar"
    depends_on:
      - mysql
      - kafka
      - otel-collector
      - order-history-service
  shipment-service:
    build: ../../ShipmentService/
    container_name: shipment-service
    ports:
      - 8082:8082
    volumes:
      - ./agent:/agent
    environment:
      - applicationName=ShipmentApp
      - groupName=otel-tracing
      - otel.collector.url=http://otel-collector:4317
      - kafka.broker.url=kafka:9092
      - order.service.url=http://order-service:8080/order
      - OTEL_SERVICE_NAME=ShipmentApp
      - OTEL_LOG_LEVEL=debug
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://otel-collector:4317
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_TRACES_SAMPLER=always_on
#      - "JAVA_TOOL_OPTIONS=-javaagent:/agent/opentelemetry-javaagent.jar"
    depends_on:
      - kafka
      - otel-collector